name: Tag Based Image Build

on:
  release:
    types: [created] # This listens to release creation events

jobs:
  buildImageForNewTag:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
    env:
      LATEST_TAG: ${{ (github.event.release.target_commitish == 'main') && 'thirdweb/engine:latest' || '' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.release.target_commitish }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          target: prod
          platforms: ${{ matrix.platform }}
          push: true
          cache-from: |
            type=gha,scope=${{ matrix.platform }}
            type=registry,ref=thirdweb/engine:buildcache-${{ matrix.platform }}
          cache-to: |
            type=gha,scope=${{ matrix.platform }},mode=max
            type=registry,ref=thirdweb/engine:buildcache-${{ matrix.platform }},mode=max
          tags: thirdweb/engine:${{ github.event.release.tag_name }}-${{ matrix.platform }}
          build-args: |
            ENGINE_VERSION=${{ github.event.release.tag_name }}

  merge-manifests:
    needs: buildImageForNewTag
    runs-on: ubuntu-latest
    env:
      LATEST_TAG: ${{ (github.event.release.target_commitish == 'main') && 'thirdweb/engine:latest' || '' }}
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create and Push Multi-arch Manifest
        run: |
          docker manifest create thirdweb/engine:${{ github.event.release.tag_name }} \
            thirdweb/engine:${{ github.event.release.tag_name }}-linux/amd64 \
            thirdweb/engine:${{ github.event.release.tag_name }}-linux/arm64
          docker manifest push thirdweb/engine:${{ github.event.release.tag_name }}

      - name: Create and Push Latest Tag (if applicable)
        if: ${{ env.LATEST_TAG != '' }}
        run: |
          docker manifest create thirdweb/engine:latest \
            thirdweb/engine:${{ github.event.release.tag_name }}-linux/amd64 \
            thirdweb/engine:${{ github.event.release.tag_name }}-linux/arm64
          docker manifest push thirdweb/engine:latest
